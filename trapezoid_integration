import numpy as np
import time

def trapezoid_integral(f, a, b, N):
    h = (b - a) / N
    integral = 0.5 * (f(a) + f(b))
    for i in range(1, N):
        integral += f(a + i * h)
    integral *= h
    return integral

def f(x):
    return 4 / (1 + x**2)

# Nilai referensi pi
pi_reference = 3.14159265358979323846

# Variasi N
N_values = [10, 100, 1000, 10000]

# Menghitung integral dan galat RMS untuk setiap N
results = []

for N in N_values:
    start_time = time.time()
    pi_approx = trapezoid_integral(f, 0, 1, N)
    end_time = time.time()
    
    rms_error = np.sqrt((pi_approx - pi_reference) ** 2)
    execution_time = end_time - start_time
    
    results.append((N, pi_approx, rms_error, execution_time))

# Menampilkan hasil
for result in results:
    print(f"N: {result[0]}, Pi Approximation: {result[1]}, RMS Error: {result[2]}, Execution Time: {result[3]}s")
